{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","redux/contacts/phone-book/contacts-actions.js","redux/contacts/phone-book/contacts-selectors.js","redux/contacts/phone-book/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Comtainer/Container.jsx","components/Layout/Layout.jsx","App.js","reportWebVitals.js","redux/contacts/phone-book/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","getLoading","state","phoneBook","loading","getContacts","contactsItems","getFilter","filter","getFilterContacts","createSelector","items","name","toLowerCase","includes","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","contact","post","deleteContact","contactId","delete","id","ContactForm","useState","setName","number","setNumber","contacts","useSelector","phonebookSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","find","alert","trim","phonebookOperation","className","s","form","label","input","type","pattern","title","onChange","required","button","ContactList","useEffect","list","map","item","onClick","Filter","phonebookAction","Container","children","Layout","App","section","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contactsSlice","createSlice","initialState","error","extraReducers","fulfilled","payload","rejected","pending","filterReducer","createReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a7b47e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3XcLb\",\"item\":\"ContactList_item__edTQG\",\"button\":\"ContactList_button__g_frP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__tnbHg\",\"label\":\"Filter_label__3CGT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__BQ-5-\",\"App-logo\":\"App_App-logo__2BBgt\",\"App-logo-spin\":\"App_App-logo-spin__3SbEX\",\"App-header\":\"App_App-header__1SpTa\",\"App-link\":\"App_App-link__Ho3ok\",\"section\":\"App_section__2qpJB\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('phonebook/filterChange');","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.phoneBook.loading;\nexport const getContacts = state => state.phoneBook.contactsItems;\nexport const getFilter = state => state.filter;\n\nexport const getFilterContacts = createSelector(\n    [getContacts, getFilter],\n    (items, filter) =>\n    items.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://625203b369af39728b4a85a8.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n    'phonebook/fetchContacts',\n    async(_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get('/contacts');\n            return data;\n        } catch (error) {\n            rejectWithValue(error);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'phonebook/addContact',\n    async(contact, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.post('/contacts', contact);\n            return data;\n        } catch (error) {\n            rejectWithValue(error);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'phonebook/deleteContact',\n    async(contactId, { rejectWithValue }) => {\n        try {\n            const {\n                data: { id },\n            } = await axios.delete(`/contacts/${contactId}`);\n            return id;\n        } catch (error) {\n            rejectWithValue(error);\n        }\n    },\n);","\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { phonebookSelector, phonebookOperation } from '../../redux/contacts/phone-book';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(phonebookSelector.getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (\r\n            contacts.find(\r\n                contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n            )\r\n        ) {\r\n            alert(`${name} is already in contacts.`);\r\n        } else if (contacts.find(contact => contact.number === number)) {\r\n            alert(`${number} is already in contacts.`);\r\n        } else if (!name.trim() || !number.trim()) {\r\n            alert(\"Enter the contact's name and number phone!\");\r\n        } else {\r\n            dispatch(phonebookOperation.addContact({ name, number }));\r\n            setName('');\r\n            setNumber('');\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <label className={s.label}>\r\n                Name\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={s.label}>\r\n                Phone Number\r\n                <input\r\n                    className={s.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.button}>\r\n                Add Contact\r\n            </button>\r\n        </form>\r\n    );\r\n}","import { useEffect } from 'react';\nimport s from './ContactList.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookSelector, phonebookOperation } from '../../redux/contacts/phone-book';\n\nexport default function ContactList() {\n    const contacts = useSelector(phonebookSelector.getFilterContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(phonebookOperation.fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <ul className={s.list}>\n            {contacts.map(({ id, name, number }) => (\n                <li key={id} className={s.item}>\n                    {name}: {number}\n                    <button onClick={() => dispatch(phonebookOperation.deleteContact(id))} type=\"button\" className={s.button}>DELETE</button>\n\n                </li>\n\n            ))}\n        </ul>\n    );\n}\n","import React from 'react';\nimport s from './Filter.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookAction, phonebookSelector } from '../../redux/contacts/phone-book';\n\nexport default function Filter() {\n    const filter = useSelector(phonebookSelector.getFilter);\n    const dispatch = useDispatch();\n    return (\n        <label className={s.label}>\n            <input type=\"text\" value={filter} onChange={e => dispatch(phonebookAction.changeFilter(e.target.value))} className={s.input} />\n        </label>\n    );\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Container = ({ children }) => {\r\n    return <div >{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '../Comtainer/Container'\r\n\r\nconst Layout = ({ children }) => (\r\n    <>\r\n        <Container  >{children}</Container>\r\n    </>\r\n);\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;","import s from './App.module.css';\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList/index'\nimport Filter from './components/Filter'\nimport Layout from './components/Layout/Layout';\n\n\nexport default function App() {\n    return (\n        <Layout>\n            <div className={s.section}>\n                <h1>Phonebook</h1>\n                <ContactForm />\n                <h2>Contacts</h2>\n                <Filter />\n                <ContactList />\n            </div>\n        </Layout>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer, createSlice } from '@reduxjs/toolkit';\nimport {\n    fetchContacts,\n    deleteContact,\n    addContact,\n} from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: {\n        contactsItems: [],\n        loading: false,\n        error: null,\n    },\n    extraReducers: {\n        //\n        // Fetch\n        [fetchContacts.fulfilled]: (state, { payload }) => ({\n            ...state,\n            contactsItems: payload,\n            loading: false,\n            error: null,\n        }),\n        [fetchContacts.rejected]: (state, { payload }) => ({\n            ...state,\n            loading: false,\n            error: payload,\n        }),\n        [fetchContacts.pending]: state => ({\n            ...state,\n            loading: true,\n            error: null,\n        }),\n        //\n        // Delete\n        [deleteContact.fulfilled]: (state, { payload }) => ({\n            ...state,\n            contactsItems: state.contactsItems.filter(\n                ({ id }) => id !== payload,\n            ),\n        }),\n        [deleteContact.pending]: state => ({\n            ...state,\n            loading: false,\n            error: null,\n        }),\n        [deleteContact.rejected]: (state, { payload }) => ({\n            ...state,\n            loading: false,\n            error: payload,\n        }),\n        //\n        // Add\n        [addContact.fulfilled]: (state, { payload }) => ({\n            ...state,\n            contactsItems: [...state.contactsItems, payload],\n            loading: false,\n            error: payload,\n        }),\n        [addContact.pending]: state => ({\n            ...state,\n            loading: true,\n            error: null,\n        }),\n        [addContact.rejected]: (state, { payload }) => ({\n            ...state,\n            loading: true,\n            error: payload,\n        }),\n    },\n});\n\nexport default contactsSlice.reducer;\n\nexport const filterReducer = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});","import { configureStore } from '@reduxjs/toolkit';\nimport contactsSlice, { filterReducer } from './contacts/phone-book/contacts-reducer';\n\nconst store = configureStore({\n    reducer: {\n        phoneBook: contactsSlice,\n        filter: filterReducer,\n    },\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/* {<PersistGate loading={null} persistor={store.persistor}> */}\n            <App />\n            {/* {</PersistGate> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3scDe\",\"label\":\"ContactForm_label__2IvCw\",\"input\":\"ContactForm_input__1v2_u\",\"button\":\"ContactForm_button__3LOvZ\"};"],"sourceRoot":""}