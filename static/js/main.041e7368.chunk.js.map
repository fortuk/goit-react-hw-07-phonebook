{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Comtainer/Container.jsx","components/Layout/Layout.jsx","App.jsx","reportWebVitals.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Form","useState","contactName","setContactName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","find","alert","text","a","post","data","addContact","className","s","form","label","input","type","pattern","title","onChange","required","button","ContactList","useEffect","get","list","map","id","item","onClick","delete","deleteContact","Filter","e","target","Container","children","Layout","App","section","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.041e7368.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3XcLb\",\"item\":\"ContactList_item__edTQG\",\"button\":\"ContactList_button__g_frP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__tnbHg\",\"label\":\"Filter_label__3CGT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__BQ-5-\",\"App-logo\":\"App_App-logo__2BBgt\",\"App-logo-spin\":\"App_App-logo-spin__3SbEX\",\"App-header\":\"App_App-header__1SpTa\",\"App-link\":\"App_App-link__Ho3ok\",\"section\":\"App_section__2qpJB\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n    'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n    'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n    'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n    'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/filter');","\nimport axios from 'axios';\nimport {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error));\n    }\n};\n\nexport const addContact = (text, number) => async dispatch => {\n    const contact = {\n        name: text,\n        number,\n    };\n\n    dispatch(addContactRequest());\n\n    try {\n        const { data } = await axios.post('/contacts', contact);\n        dispatch(addContactSuccess(data));\n    } catch (error) {\n        dispatch(addContactError(error));\n    }\n};\n\nexport const deleteContact = id => async dispatch => {\n    dispatch(deleteContactRequest());\n\n    try {\n        await axios.delete(`contacts/${id}`);\n        dispatch(deleteContactSuccess(id));\n    } catch (error) {\n        dispatch(deleteContactError(error));\n    }\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    },\n);","\r\nimport { useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\n\r\n\r\n\r\nexport default function Form() {\r\n    const [contactName, setContactName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setContactName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const isExistedName = contacts.find(\r\n            contact => contact.name.toLowerCase() === contactName.toLowerCase(),\r\n        );\r\n\r\n        if (isExistedName) {\r\n            alert(contactName + ' is already in your contacts');\r\n            return;\r\n        }\r\n\r\n        dispatch(addContact(contactName, number));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setContactName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <label className={s.label}>\r\n                Name\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={contactName}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={s.label}>\r\n                Phone Number\r\n                <input\r\n                    className={s.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.button}>\r\n                Add Contact\r\n            </button>\r\n        </form>\r\n    );\r\n}","import { useEffect } from 'react';\nimport s from './ContactList.module.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\n\nexport default function ContactList() {\n    const contacts = useSelector(getFilteredContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <ul className={s.list}>\n            {contacts.map(({ id, name, number }) => {\n                return (\n                    <li key={id} className={s.item}>\n                        {name}: <span >{number}</span>\n                        <button onClick={() => deleteContact(id)} type=\"button\" className={s.button}>DELETE</button>\n\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n","import React from 'react';\nimport s from './Filter.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nexport default function Filter() {\n    const value = useSelector(getFilter);\n    const dispatch = useDispatch();\n    return (\n        <label className={s.label}>\n            <input type=\"text\" value={value} onChange={e => dispatch(filterContact(e.target.value))} className={s.input} />\n        </label>\n    );\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Container = ({ children }) => {\r\n    return <div >{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '../Comtainer/Container'\r\n\r\nconst Layout = ({ children }) => (\r\n    <>\r\n        <Container  >{children}</Container>\r\n    </>\r\n);\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;","\n\nimport s from './App.module.css';\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport Layout from './components/Layout/Layout';\n\n\nexport default function App() {\n    return (\n        <Layout>\n            <div className={s.section}></div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </Layout>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    fetchContactsSuccess,\n    addContactSuccess,\n    deleteContactSuccess,\n    filterContact,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]: (_, action) => action.payload,\n    [addContactSuccess]: (state, action) => [...state, action.payload],\n    [deleteContactSuccess]: (state, action) =>\n        state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n    [filterContact]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n});","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware(),\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            {/* {<PersistGate loading={null} persistor={store.persistor}> */}\n            <App />\n            {/* {</PersistGate> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3scDe\",\"label\":\"ContactForm_label__2IvCw\",\"input\":\"ContactForm_input__1v2_u\",\"button\":\"ContactForm_button__3LOvZ\"};"],"sourceRoot":""}